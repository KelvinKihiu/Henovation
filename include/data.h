#include <TFT.h>
#include <SPI.h>
#include <dht.h>
#include <ThreeWire.h>
#include <RtcDS1302.h>
#include <ezButton.h>
#include <EEPROM.h>
#include <stdarg.h>
#include <Adafruit_BMP280.h>

// #define __FEATURE_ALARM__

#ifdef __FEATURE_ALARM__

#define NOTE_B0 31
#define NOTE_C1 33
#define NOTE_CS1 35
#define NOTE_D1 37
#define NOTE_DS1 39
#define NOTE_E1 41
#define NOTE_F1 44
#define NOTE_FS1 46
#define NOTE_G1 49
#define NOTE_GS1 52
#define NOTE_A1 55
#define NOTE_AS1 58
#define NOTE_B1 62
#define NOTE_C2 65
#define NOTE_CS2 69
#define NOTE_D2 73
#define NOTE_DS2 78
#define NOTE_E2 82
#define NOTE_F2 87
#define NOTE_FS2 93
#define NOTE_G2 98
#define NOTE_GS2 104
#define NOTE_A2 110
#define NOTE_AS2 117
#define NOTE_B2 123
#define NOTE_C3 131
#define NOTE_CS3 139
#define NOTE_D3 147
#define NOTE_DS3 156
#define NOTE_E3 165
#define NOTE_F3 175
#define NOTE_FS3 185
#define NOTE_G3 196
#define NOTE_GS3 208
#define NOTE_A3 220
#define NOTE_AS3 233
#define NOTE_B3 247
#define NOTE_C4 262
#define NOTE_CS4 277
#define NOTE_D4 294
#define NOTE_DS4 311
#define NOTE_E4 330
#define NOTE_F4 349
#define NOTE_FS4 370
#define NOTE_G4 392
#define NOTE_GS4 415
#define NOTE_A4 440
#define NOTE_AS4 466
#define NOTE_B4 494
#define NOTE_C5 523
#define NOTE_CS5 554
#define NOTE_D5 587
#define NOTE_DS5 622
#define NOTE_E5 659
#define NOTE_F5 698
#define NOTE_FS5 740
#define NOTE_G5 784
#define NOTE_GS5 831
#define NOTE_A5 880
#define NOTE_AS5 932
#define NOTE_B5 988
#define NOTE_C6 1047
#define NOTE_CS6 1109
#define NOTE_D6 1175
#define NOTE_DS6 1245
#define NOTE_E6 1319
#define NOTE_F6 1397
#define NOTE_FS6 1480
#define NOTE_G6 1568
#define NOTE_GS6 1661
#define NOTE_A6 1760
#define NOTE_AS6 1865
#define NOTE_B6 1976
#define NOTE_C7 2093
#define NOTE_CS7 2217
#define NOTE_D7 2349
#define NOTE_DS7 2489
#define NOTE_E7 2637
#define NOTE_F7 2794
#define NOTE_FS7 2960
#define NOTE_G7 3136
#define NOTE_GS7 3322
#define NOTE_A7 3520
#define NOTE_AS7 3729
#define NOTE_B7 3951
#define NOTE_C8 4186
#define NOTE_CS8 4435
#define NOTE_D8 4699
#define NOTE_DS8 4978

// ##############**"HE IS A PIRATE" Theme song of Pirates of caribbean**##############//
const uint16_t Pirates_note[] PROGMEM = {
    NOTE_D4, NOTE_D4, NOTE_D4, NOTE_D4, NOTE_D4, NOTE_D4, NOTE_D4, NOTE_D4,
    NOTE_D4, NOTE_D4, NOTE_D4, NOTE_D4, NOTE_D4, NOTE_D4, NOTE_D4, NOTE_D4,
    NOTE_D4, NOTE_D4, NOTE_D4, NOTE_D4, NOTE_D4, NOTE_D4, NOTE_D4, NOTE_D4,
    NOTE_A3, NOTE_C4, NOTE_D4, NOTE_D4, NOTE_D4, NOTE_E4, NOTE_F4, NOTE_F4,
    NOTE_F4, NOTE_G4, NOTE_E4, NOTE_E4, NOTE_D4, NOTE_C4, NOTE_C4, NOTE_D4,
    0, NOTE_A3, NOTE_C4, NOTE_B3, NOTE_D4, NOTE_B3, NOTE_E4, NOTE_F4,
    NOTE_F4, NOTE_C4, NOTE_C4, NOTE_C4, NOTE_C4, NOTE_D4, NOTE_C4,
    NOTE_D4, 0, 0, NOTE_A3, NOTE_C4, NOTE_D4, NOTE_D4, NOTE_D4, NOTE_F4,
    NOTE_G4, NOTE_G4, NOTE_G4, NOTE_A4, NOTE_A4, NOTE_A4, NOTE_A4, NOTE_G4,
    NOTE_A4, NOTE_D4, 0, NOTE_D4, NOTE_E3, NOTE_F4, NOTE_F4, NOTE_G4, NOTE_A4,
    NOTE_D4, 0, NOTE_D4, NOTE_F4, NOTE_E4, NOTE_E4, NOTE_F4, NOTE_D4};

const uint8_t Pirates_duration[] PROGMEM = {
    4, 8, 4, 8, 4, 8, 8, 8, 8, 4, 8, 4, 8, 4, 8, 8, 8, 8,
    4, 8, 4, 8, 4, 8, 8, 8, 8, 4, 4, 8, 8, 4, 4, 8, 8, 4,
    4, 8, 8, 8, 4, 8, 8, 8, 4, 4, 8, 8, 4, 4, 8, 8, 4, 4,
    8, 4, 4, 8, 8, 8, 8, 4, 4, 8, 8, 4, 4, 8, 8, 4, 4, 8,
    8, 8, 4, 8, 8, 8, 4, 4, 4, 8, 4, 8, 8, 8, 4, 4, 8, 8};
// ###########End of He is a Pirate song#############//

#endif // __ALARM__

const uint16_t humidityImg[] PROGMEM = {
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2434, 0x128c, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x35dc, 0x1b50, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x122a, 0x1b50, 0x2413, 0x35dc, 0x359b, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2476, 0x1acd, 0x2cb7, 0x35dc, 0x35dc, 0x1aee, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x35dc, 0x128c, 0x2414, 0x35dc, 0x35dc, 0x1acd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2475, 0x35dc, 0x1aee, 0x0000, 0x126b, 0x128c, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x120a, 0x35dc, 0x35dc, 0x1b91, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2d5a, 0x35dc, 0x35dc, 0x2434, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2434, 0x35dc, 0x35dc, 0x35dc, 0x2d39, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x122a, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2d19, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x23b2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2455, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x2d19, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x35bc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x2455, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x128c, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x1aee, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x2d7a, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x1b2f, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x1b2f, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x128c, 0x35dc, 0x3ddc, 0x45fc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x35dc, 0x461c, 0x86bd, 0x3ddc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2434, 0x35dc, 0x6e7d, 0x767d, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x357a, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2cf8, 0x35dc, 0x563d, 0x3dfc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x1aee, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x23d2, 0x35bc, 0x35dc, 0x35dc, 0x35dc, 0x35dc, 0x2d5a, 0x12ac, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000};

const uint16_t tempImg[] PROGMEM = {
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18e3, 0x52cb, 0x4aab, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2124, 0xbe7a, 0xd73e, 0xd73d, 0xadf8, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x6baf, 0xdf7e, 0xe7bf, 0xe7bf, 0xd73d, 0x4a8a, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x73f0, 0xdf5e, 0xec92, 0xed14, 0xd75e, 0x52cb, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x73f0, 0xe639, 0xea8a, 0xea89, 0xdedc, 0x52cb, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x73f0, 0xe618, 0xea8a, 0xea89, 0xdebb, 0x52cb, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x4a49, 0x83cf, 0x82eb, 0xd2aa, 0xdebb, 0x52cb, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x5aec, 0xa4b3, 0xaaca, 0xe2aa, 0xdebb, 0x52cb, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x73f0, 0xe618, 0xea8a, 0xea89, 0xdebb, 0x52cb, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x634d, 0xbd55, 0xcaaa, 0xea8a, 0xdebb, 0x52cb, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x39e7, 0x6b2c, 0x6b0b, 0xcaaa, 0xdebb, 0x52cb, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x73f0, 0xe618, 0xea89, 0xea89, 0xdebb, 0x52cb, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x73f0, 0xe618, 0xea8a, 0xea89, 0xdebb, 0x52cb, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x4229, 0x7bae, 0x82eb, 0xd2aa, 0xdebb, 0x52cb, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x5b2c, 0xacd3, 0xb2ca, 0xe28a, 0xdebb, 0x52ec, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x4aab, 0xc6bb, 0xe619, 0xea69, 0xea69, 0xdefc, 0xbe5a, 0x31c7, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2124, 0xc6bb, 0xe71d, 0xeb6d, 0xea48, 0xea48, 0xe410, 0xdf5e, 0xb639, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x6baf, 0xdf5e, 0xe38e, 0xea08, 0xea28, 0xea28, 0xea28, 0xe492, 0xd73d, 0x4aaa, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x8c93, 0xdf5e, 0xe1e7, 0xe1e7, 0xe1e7, 0xe1e7, 0xe1e7, 0xe2aa, 0xdf7e, 0x6baf, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x8472, 0xdf7e, 0xe1e7, 0xe1c6, 0xe1c6, 0xe1c6, 0xe1c6, 0xe2cb, 0xdf5e, 0x636e, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x5aec, 0xd73d, 0xe451, 0xe1c6, 0xe1c6, 0xe1c6, 0xe1c6, 0xe555, 0xcf1d, 0x39e8, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xadf8, 0xdf7e, 0xe4f3, 0xe2eb, 0xe30c, 0xe576, 0xd75e, 0x9d35, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2104, 0xa597, 0xd71d, 0xd75e, 0xd75e, 0xcefc, 0x9514, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x39e8, 0x5b0c, 0x5b0c, 0x31a6, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000};

const uint16_t arrow[] PROGMEM{
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0a22, 0x0a22, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0222, 0x0222, 0x0222, 0x0a62, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0a22, 0x0a22, 0x0a22, 0x2344, 0x2384, 0x1303, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0a22, 0x0a22, 0x0a22, 0x2b85, 0x5528, 0x2bc5, 0x1303, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0222, 0x0222, 0x0222, 0x2364, 0x5508, 0x54e8, 0x3c26, 0x1b24, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0a42, 0x0a62, 0x0a62, 0x0a62, 0x0a62, 0x0a62, 0x0a62, 0x0a42, 0x0a22, 0x2344, 0x54e8, 0x4cc8, 0x4cc8, 0x4467, 0x1b44, 0x12c3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0a22, 0x0a62, 0x0a62, 0x0a62, 0x0a62, 0x0a62, 0x0a62, 0x0a62, 0x0a62, 0x0aa3, 0x12e3, 0x33c5, 0x4cc8, 0x4ca8, 0x4ca8, 0x4488, 0x4447, 0x2365, 0x12e3, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0222, 0x0222, 0x0a42, 0x1b03, 0x2364, 0x33c5, 0x3c26, 0x4487, 0x4cc8, 0x54e8, 0x4ce8, 0x4cc8, 0x4ca8, 0x4c88, 0x4488, 0x4467, 0x4447, 0x3c27, 0x2ba6, 0x12e3, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0a22, 0x0222, 0x0a42, 0x5d48, 0x5d48, 0x5d48, 0x5528, 0x5508, 0x54e8, 0x4ce8, 0x4cc8, 0x4ca8, 0x4488, 0x4467, 0x4467, 0x3c47, 0x3c27, 0x3c07, 0x33e7, 0x2ba6, 0x12e4, 0x0aa3, 0x0000,
    0x0000, 0x0222, 0x0222, 0x0a42, 0x5528, 0x5d28, 0x5528, 0x5508, 0x54e8, 0x4cc8, 0x4cc8, 0x4ca8, 0x4488, 0x4467, 0x4447, 0x3c27, 0x3c27, 0x3c07, 0x33e7, 0x33c7, 0x33a7, 0x2366, 0x0aa3, 0x0000,
    0x0000, 0x0a22, 0x0222, 0x0a22, 0x4ce8, 0x5508, 0x5508, 0x54e8, 0x4cc8, 0x4ca8, 0x4ca8, 0x4488, 0x4467, 0x4447, 0x3c27, 0x3c07, 0x3c07, 0x33e7, 0x33c7, 0x33a7, 0x2b66, 0x12c3, 0x0000, 0x0000,
    0x0000, 0x0a22, 0x0222, 0x0a22, 0x4ca7, 0x54e8, 0x4ce8, 0x4cc8, 0x4ca8, 0x4c88, 0x4488, 0x4467, 0x4447, 0x3c27, 0x3c07, 0x3be7, 0x33c7, 0x33c7, 0x33a7, 0x2b66, 0x12e4, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0a22, 0x0222, 0x0a22, 0x4487, 0x4cc8, 0x4cc8, 0x4ca8, 0x4488, 0x4467, 0x4447, 0x3c47, 0x3c27, 0x3c07, 0x33e7, 0x33c7, 0x33a7, 0x2ba7, 0x2b66, 0x12c4, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0222, 0x0222, 0x0222, 0x3c47, 0x4ca8, 0x4ca8, 0x4488, 0x4467, 0x4447, 0x3c27, 0x3c27, 0x3c07, 0x33e7, 0x33c7, 0x33a7, 0x2b87, 0x2b66, 0x12e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0202, 0x0222, 0x0a22, 0x3c06, 0x4c88, 0x4488, 0x4467, 0x4447, 0x3c27, 0x3c07, 0x3be7, 0x33c7, 0x33c7, 0x33a7, 0x2b87, 0x2b66, 0x12e4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x01c2, 0x0222, 0x0a22, 0x33e6, 0x4468, 0x3c47, 0x33e6, 0x2ba5, 0x2345, 0x12a3, 0x0a62, 0x0a83, 0x33a7, 0x2b87, 0x2b66, 0x12e4, 0x0a83, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0a22, 0x12e3, 0x1b04, 0x12c3, 0x0aa3, 0x0000, 0x0a02, 0x0222, 0x0222, 0x0a63, 0x2b87, 0x2b66, 0x12e4, 0x0a83, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0a22, 0x0a22, 0x0a63, 0x2b66, 0x12e4, 0x0aa3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0a22, 0x0a22, 0x0a62, 0x1ae4, 0x0aa3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0202, 0x0a42, 0x0a83, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000};

enum Color
{
  RED = 0xf800,
  GREEN = 0x07e0,
  BLUE = 0x001f,
  BLACK = 0x0000,
  WHITE = 0xffff,
  YELLOW = 0xffe0,
  MAGENTA = 0xf81f,
  CYAN = 0x07ff
};

struct Config
{
  uint8_t alarmHr : 5;
  uint8_t alarmMin : 6;
  uint8_t temp : 1; /*0. Celc 1. Fahr*/
  Color bgcolor : 16;
  Color fgcolor : 16;
};

enum Mode
{
  HOME,
  ALARM_HR,
  ALARM_MIN,
  MENU,
  CONFIG
};

#define getTemp(tCelc, temp) (((temp) == 0) ? (tCelc) : (((tCelc) * (1.8)) + (32)))

void (*reboot)(void) = 0;
inline void isrChangeMode() __attribute__((always_inline));
void displayMenu();
void menuMode();
void displayShell();
#ifdef __FEATURE_ALARM__
void alarmShell();
void ringAlarm();
void setAlarmMode();
#endif
void configShell();
void configMode();
void displayMode();
inline void startRTC() __attribute__((always_inline));
void setDateTime();
void initScreen();
inline void readData() __attribute__((always_inline));
inline void displayDateTime() __attribute__((always_inline));
inline void displayTempAndHum() __attribute__((always_inline));
inline uint8_t dow(uint16_t y, uint8_t m, uint8_t d) __attribute__((always_inline));
void drawImage(const uint16_t *image, byte xPos, byte yPos, byte height, byte width);
inline void clearImage(byte xPos, byte yPos, byte height, byte width) __attribute__((always_inline));
void formatString(char *buffer, size_t size, const char *format, ...);